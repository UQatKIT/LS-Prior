[project]
authors = [{name = "Maximilian Kruse", email = "maximilian.kruse@kit.edu"}]
maintainers = [{ name = "Maximilian Kruse", email = "maximilian.kruse@kit.edu" }]
description = "Large-Scale Gaussian Prior Fields via SPDEs"
name = "ls-prior"
requires-python = ">= 3.13"
dynamic = ["version"]
readme = "README.md"
license = { text = "MIT" }
keywords = ["prior-fields", "bayesian inference", "spde", "fenicsx"]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Operating System :: POSIX :: Linux",
  "Programming Language :: Python :: 3",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
]
urls = { repository = "https://github.com/UQatKIT/LS-Prior", documentation = "https://uqatkit.github.io/LS-Prior/" }


# --------------------------------------------------------------------------------------------------
[tool.pixi.dependencies]
numpy = ">=2.2,<3"
fenics-dolfinx = ">=0.9.0,<0.10"
mpich = ">=4.3.1,<5"

[tool.pixi.pypi-dependencies]
ls_prior = { path = ".", editable = true }

[tool.pixi.workspace]
channels = ["conda-forge"]
platforms = ["linux-64"]

[tool.pixi.tasks]
format = "ruff format"
serve-docs = "mkdocs serve"
build-docs = "mkdocs build"
changelog = "git-cliff"

[tool.pixi.feature.test.dependencies]
pytest = ">=8.4.1,<9"
pytest-cov = ">=6.2.1,<7"
pytest-xdist = ">=3.8.0,<4"

[tool.pixi.feature.docs.dependencies]
mkdocs-material = ">=9.6.18,<10"
mkdocs-autorefs = ">=1.4.3,<2"
mkdocstrings-python = ">=1.18.0,<2"
git-cliff = ">=2.10.0,<3"

[tool.pixi.feature.style.dependencies]
ruff = ">=0.12.10,<0.13"

[tool.pixi.feature.dev.dependencies]
jupyter = ">=1.1.1,<2"
pandas = ">=2.3.2,<3"
matplotlib = ">=3.10.5,<4"
seaborn = ">=0.13.2,<0.14"
pre-commit = ">=4.3.0,<5"
pyvista = ">=0.46.3,<0.47"

[tool.pixi.environments]
default = { solve-group = "default" }
dev = { features = ["dev"], solve-group = "default" }
style = { features = ["dev", "style"], solve-group = "default" }
test = { features = ["dev", "test"], solve-group = "default" }
docs = { features = ["dev", "docs"], solve-group = "default" }
all = { features = ["dev", "docs", "style", "test"], solve-group = "default" }


# --------------------------------------------------------------------------------------------------
[build-system]
build-backend = "hatchling.build"
requires = ["hatchling", "hatch-vcs"]

[tool.hatch.version]
source = "vcs"


# --------------------------------------------------------------------------------------------------
[tool.ruff]
line-length = 100

[tool.ruff.lint]
select = ["ALL"]
ignore = [
  "COM812",
  "EM101",
  "EM102",
  "FBT001",
  "FBT003",
  "F722",
  "F821",
  "ISC001",
  "PD008",
  "PD011",
  "PLR2004",
  "PT003",
  "RET504",
  "S101",
  "TRY003",
]
pydocstyle.convention = "google"


# --------------------------------------------------------------------------------------------------
[tool.pytest.ini_options]
testpaths = ["test"]
addopts = [
  "-v",
  "--import-mode=importlib",
  "--cov=ls_prior",
  "--cov-config=.coveragerc",
]
markers = [
  "unit: unit tests",
  "integration: integration tests",
  "slow: tests with long runtime",
]
